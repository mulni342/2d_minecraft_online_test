{"version":3,"sources":["webpack://2d_minecraft_online_test/./public/src/World/Block.js","webpack://2d_minecraft_online_test/./public/src/World/Player.js","webpack://2d_minecraft_online_test/./public/src/World/Vector.js","webpack://2d_minecraft_online_test/./public/src/World/World.js","webpack://2d_minecraft_online_test/webpack/bootstrap","webpack://2d_minecraft_online_test/webpack/runtime/compat get default export","webpack://2d_minecraft_online_test/webpack/runtime/define property getters","webpack://2d_minecraft_online_test/webpack/runtime/hasOwnProperty shorthand","webpack://2d_minecraft_online_test/webpack/runtime/make namespace object","webpack://2d_minecraft_online_test/./public/src/mainEJS6.js"],"names":[],"mappings":";;;;;;;;;AAAA,kBAAkB,mBAAO,CAAC,0DAAe;AACzC,KAAK,SAAS,GAAG,mBAAO,CAAC,8CAAU;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,cAAc,qC;;AAEd;AACA;AACA;;AAEA;AACA;AACA,+G;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kBAAkB,Q;;;;;;;;;;;;;;;;;;;;;AC1ClB,KAAK,SAAS,GAAG,mBAAO,CAAC,8CAAU;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B,mDAAmD,gCAAgC;AACnF,iDAAiD,iCAAiC;;AAElF;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF,SAAS;AACT;;AAEA,8BAA8B,8FAA8F;;AAE5H;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC,SAAS,E;;AAET;;AAEA;AACA;;AAEA;AACA,8D;AACA,8D;;AAEA;AACA;;AAEA,iCAAiC,mBAAmB;AACpD;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,qBAAqB;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8DAA8D;AAC9D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gGAAgG,uBAAuB;AACvH;AACA;;;AAGA,kBAAkB,S;;;;;;;;;;AC7HlB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,G;;AAEA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,U;;;;;;;;;;AClKlB,OAAO,QAAQ,GAAG,mBAAO,CAAC,4CAAS;AACnC,KAAK,SAAS,GAAG,mBAAO,CAAC,8CAAU;;AAEnC;AACA;AACA;AACA,8CAA8C;AAC9C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;AACA;AACA,mDAAmD,EAAE;AACrD;;AAEA,6B;AACA,wC;AACA,gC;AACA,SAAS;AACT;;AAEA,qC;AACA,uBAAuB,wBAAwB;AAC/C;AACA,qEAAqE,QAAQ;AAC7E;AACA;AACA;AACA;AACA,K;;AAEA,aAAa,iEAAiE;;AAE9E;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;;;AAGA,kBAAkB,Q;;;;;;UC/DlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;ACNsC;AACE;;;AAGxC,gBAAgB,+CAAK;AACrB,iBAAiB,iDAAM;;AAEvB;;AAEA;;AAEA;;AAEA;;;AAGA;AACA,wB;AACA;AACA,sBAAsB,+BAA+B,EAAE;;AAEvD,0BAA0B;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"mainEJS6.js","sourcesContent":["var Blocks_info = require(\"./Blocks_info\");\r\nvar { Vector } = require(\"./Vector\");\r\n\r\nclass Block {\r\n    constructor(coordX, coordY, id, world) {\r\n        this.position = new Vector(coordX * world.size, -(coordY * world.size));\r\n        this.static_position = this.position.clone();\r\n        this.coord = new Vector(coordX, coordY);\r\n        this.id = id;\r\n        this.world = world;\r\n        this.solid_block = true;\r\n        this.delete_in_next_update = false;\r\n        this.size = new Vector(this.world.size, this.world.size);\r\n        this.is_displayed = false;\r\n        this.img = document.createElement(\"img\");\r\n        this.img.src = Blocks_info[this.id].sprite;\r\n\r\n    }\r\n\r\n    remove() { this.delete_in_next_update = true }; \r\n\r\n    display() {\r\n        var px = Math.abs(this.world.player.coords.x - this.coord.x);\r\n        var py = Math.abs(this.world.player.coords.y - this.coord.y);\r\n        \r\n        if (px < this.world.worldRenderDistance.x) {\r\n            if (py < this.world.worldRenderDistance.y) {\r\n                this.world.ctx.drawImage(this.img, this.position.x, this.position.y, this.size.x, this.size.y);    \r\n                this.is_displayed = true;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    update() {\r\n        this.position.x = (this.static_position.x + this.world.player.camera_offset.x);\r\n        this.position.y = (this.static_position.y + this.world.player.camera_offset.y);\r\n        this.display();\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = { Block }","var { Vector } = require(\"./Vector\");\r\n\r\nclass Player {\r\n    constructor(world, coordX, coordY) {\r\n        this.world = world;\r\n        this.world.player = this;\r\n        this.position = new Vector(coordX * world.size, -(coordY * world.size));\r\n        this.static_position = this.position.clone();\r\n        this.velocity = new Vector(0, 0);\r\n        this.velocity.limit = 7;\r\n        this.acceleration = new Vector(0, 0)\r\n        this.acceleration.limit = 0.4;\r\n        this.size = new Vector(this.world.size * 0.9, (this.world.size*2) * 0.95);\r\n        this.camera_offset = new Vector(0, 0);\r\n        this.camera_position = new Vector(this.world.canvas.width / 2, this.world.canvas.height / 2);\r\n        this.camera_accelerator_multiplicator = 1;\r\n        this.velocityLimitX = 3;\r\n\r\n        this.speed = new Vector(world.size * 0.002, world.size * 0.002);\r\n        this.keys_down = { \"KeyA\": false, \"KeyD\": false };\r\n        window.addEventListener(\"keydown\", (e) => { this.keys_down[e.code] = true });\r\n        window.addEventListener(\"keyup\", (e) => { this.keys_down[e.code] = false });\r\n\r\n        this.mouse_coord = new Vector(0, 0);\r\n        this.world.canvas.addEventListener(\"mousemove\", (e) => {\r\n            this.mouse_coord.x = Math.floor((e.clientX - this.camera_offset.x) / this.world.size);\r\n            this.mouse_coord.y = -Math.floor((e.clientY - this.camera_offset.y) / this.world.size);\r\n        });\r\n        \r\n        this.coords = new Vector(0, 0);\r\n\r\n        this.world.canvas.addEventListener(\"click\", () => {\r\n            let player_left_x = Math.floor((this.position.x - this.camera_offset.x) / world.worldSize);\r\n            let player_right_x = Math.floor(((this.position.x + this.size.x) - this.camera_offset.x) /this.world.size);\r\n            let player_left_y = Math.floor((this.position.y - this.camera_offset.y) / world.worldSize);\r\n            let player_right_y = Math.floor(((this.position.y + this.size.y) - this.camera_offset.x) / this.world.size);\r\n            if (!((this.mouse_coord.x == player_left_x  && this.mouse_coord.y == player_left_y) || \r\n                  (this.mouse_coord.x == player_right_x && this.mouse_coord.y == player_right_y))) {\r\n                this.world.createBlock(this.mouse_coord.x, this.mouse_coord.y, 1); }\r\n        });\r\n    }\r\n\r\n    camera_position_update() { this.camera_position = new Vector(this.world.canvas.width / 2, this.world.canvas.height / 2); }\r\n    \r\n    camere_movement() {\r\n        var acceleration = Vector.subtract(this.position, this.camera_position);\r\n        acceleration.multiply(this.camera_accelerator_multiplicator);\r\n        this.camera_offset.subtract(acceleration);\r\n        this.position.subtract(acceleration);\r\n    }\r\n\r\n    blockCollision(x, y) {\r\n        let lastPos = this.position.clone();\r\n\r\n        this.position.x = x;\r\n        this.position.y = y;\r\n        \r\n        var ret = false;\r\n        this.world.blocks.forEach(block => {\r\n            if (this.collision(block)) {\r\n                ret = true; return; }\r\n        });    \r\n        \r\n        this.position = lastPos;\r\n\r\n        return ret;\r\n    }\r\n\r\n    updatePlayerCoords() {\r\n        var mid_playerX = this.position.x + (this.size.x / 2);        \r\n        var mid_playerY = this.position.y + (this.size.y / 4);        \r\n\r\n        this.coords.x = Math.round((mid_playerX - this.camera_offset.x) / this.world.size);\r\n        this.coords.y = Math.round((mid_playerY - this.camera_offset.y) / this.world.size) * -1;\r\n\r\n        if (this.coords.x == 0) { this.coords.x = 0; }\r\n    }\r\n\r\n    collision(block) {\r\n        let block_pos = block.position;\r\n\r\n        if (!block.is_displayed) return;\r\n\r\n        return (this.position.y + this.size.y >= block_pos.y && this.position.y < block_pos.y + block.size.y) &&    \r\n               (this.position.x + this.size.x >= block_pos.x && this.position.x < block_pos.x + block.size.x ) }\r\n\r\n    draw() {\r\n        this.world.ctx.fillStyle = \"rgb(255, 0, 0)\";\r\n        this.world.ctx.fillRect(this.position.x, this.position.y, this.size.x, this.size.y);\r\n    }\r\n\r\n    update(gtime) {\r\n        this.updatePlayerCoords();\r\n        this.acceleration.x = this.speed.x * (this.keys_down[\"KeyD\"] - this.keys_down[\"KeyA\"]);\r\n        this.acceleration.y += 0.005 * gtime;\r\n        this.acceleration.setLimit();\r\n        this.velocity.add(this.acceleration);\r\n        this.velocity.setLimit();\r\n\r\n        if (this.acceleration.x == 0) { this.velocity.x = 0; }\r\n\r\n        if (this.blockCollision(this.position.x, this.position.y + this.velocity.y)) {\r\n            while(!this.blockCollision(this.position.x, this.position.y + Math.sign(this.velocity.y))) {\r\n                this.position.y += Math.sign(this.velocity.y);\r\n            }\r\n            this.velocity.y = 0;\r\n            this.acceleration.y = 0;\r\n        }\r\n        \r\n        if (this.blockCollision(this.position.x + this.velocity.x, this.position.y - 1)) {\r\n            while(!this.blockCollision(this.position.x + Math.sign(this.velocity.x), this.position.y - 1)) {\r\n                this.position.x += Math.sign(this.velocity.x); }\r\n            this.velocity.x = 0;\r\n        }\r\n\r\n        if (this.velocity.x > this.velocityLimitX) this.velocity.x = this.velocityLimitX\r\n        else if (this.velocity.x < -this.velocityLimitX)  this.velocity.x = -this.velocityLimitX\r\n        this.position.add(this.velocity);\r\n        this.camere_movement();\r\n        this.draw();\r\n        if (this.keys_down.Space && this.blockCollision(this.position.x, this.position.y + 1)) { this.velocity.y = -10; }\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = { Player }","/*\r\nSimple 2D JavaScript Vector Class\r\nHacked from evanw's lightgl.js\r\nhttps://github.com/evanw/lightgl.js/blob/master/src/vector.js\r\n*/\r\n\r\nfunction Vector(x, y) {\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.limit = undefined;\r\n}\r\n\r\n/* INSTANCE METHODS */\r\n\r\nVector.prototype = {\r\n\tnegative: function() {\r\n\t\tthis.x = -this.x;\r\n\t\tthis.y = -this.y;\r\n\t\tthis.limit = undefined;\r\n\t\treturn this;\r\n\t},\r\n\tadd: function(v) {\r\n\t\tif (v instanceof Vector) {\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t} else {\r\n\t\t\tthis.x += v;\r\n\t\t\tthis.y += v;\r\n\t\t}\t\r\n\r\n\t\tif (this.limit != undefined) \r\n\t\t\tthis.setLimit();\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\tsubtract: function(v) {\r\n\t\tif (v instanceof Vector) {\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t} else {\r\n\t\t\tthis.x -= v;\r\n\t\t\tthis.y -= v;\r\n\t\t}\r\n\t\t\r\n\t\tif (this.limit != undefined) \r\n\t\t\tthis.setLimit();\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\tmultiply: function(v) {\r\n\t\tif (v instanceof Vector) {\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t} else {\r\n\t\t\tthis.x *= v;\r\n\t\t\tthis.y *= v;\r\n\t\t}\r\n\r\n\t\tif (this.limit != undefined) \r\n\t\t\tthis.setLimit();\r\n\r\n\t\treturn this;\r\n\t},\r\n\tdivide: function(v) {\r\n\t\tif (v instanceof Vector) {\r\n\t\t\tif(v.x != 0) this.x /= v.x;\r\n\t\t\tif(v.y != 0) this.y /= v.y;\r\n\t\t} else {\r\n\t\t\tif(v != 0) {\r\n\t\t\t\tthis.x /= v;\r\n\t\t\t\tthis.y /= v;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.limit != undefined) \r\n\t\t\tthis.setLimit();\r\n\r\n\t\treturn this;\r\n\t},\r\n\tsetLimit: function () {\r\n\t\tif (this.x > this.limit) \r\n\t\t\tthis.x = this.limit;\r\n\t\t\r\n\t\tif (this.y > this.limit) \r\n\t\t\tthis.y = this.limit\r\n\r\n\t\tif (this.x < -this.limit)\r\n\t\t\tthis.x = -this.limit\r\n\r\n\t\tif (this.y < -this.limit) \r\n\t\t\tthis.y = -this.limit;\r\n\r\n\t},\r\n\tequals: function(v) {\r\n\t\treturn this.x == v.x && this.y == v.y;\r\n\t},\r\n\tdot: function(v) {\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\t},\r\n\tcross: function(v) {\r\n\t\treturn this.x * v.y - this.y * v.x\r\n\t},\r\n\tlength: function() {\r\n\t\treturn Math.sqrt(this.dot(this));\r\n\t},\r\n\tnormalize: function() {\r\n\t\treturn this.divide(this.length());\r\n\t},\r\n\tmin: function() {\r\n\t\treturn Math.min(this.x, this.y);\r\n\t},\r\n\tmax: function() {\r\n\t\treturn Math.max(this.x, this.y);\r\n\t},\r\n\ttoAngles: function() {\r\n\t\treturn -Math.atan2(-this.y, this.x);\r\n\t},\r\n\tangleTo: function(a) {\r\n\t\treturn Math.acos(this.dot(a) / (this.length() * a.length()));\r\n\t},\r\n\ttoArray: function(n) {\r\n\t\treturn [this.x, this.y].slice(0, n || 2);\r\n\t},\r\n\tclone: function() {\r\n\t\treturn new Vector(this.x, this.y);\r\n\t},\r\n\tset: function(x, y) {\r\n\t\tthis.x = x; this.y = y;\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\n/* STATIC METHODS */\r\nVector.negative = function(v) {\r\n\treturn new Vector(-v.x, -v.y);\r\n};\r\nVector.add = function(a, b) {\r\n\tif (b instanceof Vector) return new Vector(a.x + b.x, a.y + b.y);\r\n\telse return new Vector(a.x + b, a.y + b);\r\n};\r\nVector.subtract = function(a, b) {\r\n\tif (b instanceof Vector) return new Vector(a.x - b.x, a.y - b.y);\r\n\telse return new Vector(a.x - b, a.y - b);\r\n};\r\nVector.multiply = function(a, b) {\r\n\tif (b instanceof Vector) return new Vector(a.x * b.x, a.y * b.y);\r\n\telse return new Vector(a.x * b, a.y * b);\r\n};\r\nVector.divide = function(a, b) {\r\n\tif (b instanceof Vector) return new Vector(a.x / b.x, a.y / b.y);\r\n\telse return new Vector(a.x / b, a.y / b);\r\n};\r\nVector.equals = function(a, b) {\r\n\treturn a.x == b.x && a.y == b.y;\r\n};\r\nVector.dot = function(a, b) {\r\n\treturn a.x * b.x + a.y * b.y;\r\n};\r\nVector.cross = function(a, b) {\r\n\treturn a.x * b.y - a.y * b.x;\r\n};\r\n\r\nmodule.exports = { Vector };","const { Block } = require(\"./Block\");\r\nvar { Vector } = require(\"./Vector\");\r\n\r\nclass World {\r\n    constructor(size) {\r\n        this.canvas = document.createElement(\"canvas\");\r\n        this.canvas.width = window.innerWidth; this.canvas.height = window.innerHeight;\r\n        this.worldRenderDistance = new Vector(20, 15);\r\n\r\n        this.canvas.addEventListener('contextmenu', event => event.preventDefault());\r\n\r\n        document.body.appendChild(this.canvas);\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n        this.ctx.imageSmoothingEnabled = false;\r\n        this.size = size;\r\n        this.blocks = [];\r\n        this.player = undefined;\r\n\r\n        window.addEventListener(\"resize\", () => {\r\n            this.canvas.width = window.innerWidth; this.canvas.height = window.innerHeight,\r\n            this.ctx = this.canvas.getContext(\"2d\");\r\n            this.player.camera_position_update();\r\n            this.ctx.imageSmoothingEnabled = false; });\r\n    }\r\n\r\n    arrayRemove(arr, value) {    \r\n        return arr.filter(function(ele){ \r\n            return ele != value; \r\n        });\r\n    }\r\n    \r\n    createBlock(coordX, coordY, id) {   \r\n        for (let i = 0; i < this.blocks.length; i++) {\r\n            let block = this.blocks[i];\r\n            if (block.coord.x == coordX && block.coord.y == coordY) { return; }\r\n        }\r\n        let block = new Block(coordX, coordY, id, this);\r\n        this.blocks.push(block);\r\n        return block;\r\n    }   \r\n\r\n    clean() { this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height); }\r\n\r\n    updateBlocks() {\r\n        this.blocks.forEach((block, index) => {\r\n            if (block.delete_in_next_update) {\r\n                this.blocks = this.arrayRemove(this.blocks, index)\r\n            } else {\r\n                block.update();\r\n            }\r\n        });\r\n    }\r\n\r\n    loadBlocks(blocks) {\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            let block_info = blocks[i];\r\n            let block = new Block(block_info.x, block_info.y, block_info.id, this);\r\n            this.blocks.push(block);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = { World } ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { World } from \"./World/World\";\r\nimport { Player } from \"./World/Player\";\r\n\r\n\r\nvar world = new World(50);\r\nlet player = new Player(world, 0, 30);\r\n\r\nworld.loadBlocks(world_gen_info.blocks);\r\n\r\nwindow.world = world;\r\n\r\nlet change_camera_accelerator_multiplicator = true;\r\n\r\nlet ltime = 0, ctime = 0;\r\n\r\n\r\nrequestAnimationFrame(update);\r\nfunction update(gtime) {    \r\n    world.clean();\r\n    setTimeout(() => { requestAnimationFrame(update); }, 1000/100);\r\n\r\n    ctime = gtime - ltime; ltime = gtime;\r\n\r\n    player.update(ctime);\r\n    world.updateBlocks();\r\n\r\n    if (change_camera_accelerator_multiplicator) {\r\n        player.camera_accelerator_multiplicator = 0.08;\r\n        change_camera_accelerator_multiplicator = false;\r\n    }\r\n}\r\n"],"sourceRoot":""}